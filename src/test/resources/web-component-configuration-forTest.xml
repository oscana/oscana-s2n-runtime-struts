<?xml version="1.0" encoding="UTF-8"?>

<component-configuration
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://tis.co.jp/nablarch/component-configuration"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration  https://nablarch.github.io/schema/component-configuration.xsd">

  <!-- テーブル定義 -->
  <import file="nablarch/schema-config.xml" />

  <!-- 精査に使用する文字集合定義 -->
  <import file="nablarch/core/validation/charset-definition.xml"/>

  <!-- Nablarch共通機能 -->
  <!-- コード機能 -->
  <import file="nablarch/common/code.xml"/>
  <!-- 自動採番型を持たないRDBMSで、ユニバーサルDAOを使用するための設定 -->
  <import file="nablarch/common/dao.xml" />

  <!-- web固有設定の読み込み -->
  <!-- データベース設定 -->
  <import file="nablarch/webui/db-for-webui.xml"/>

  <!-- エラーページ設定 -->
  <import file="nablarch/webui/error-page-for-webui.xml" />

  <!-- ファイルパス設置 -->
  <import file="nablarch/webui/filepath-for-webui.xml" />

  <!-- ファイルアップロード機能設定 -->
  <import file="nablarch/webui/multipart.xml" />

  <!-- カスタムタグ設定 -->
  <import file="nablarch/webui/nablarch-tag.xml" />

  <!-- 二重サブミット防止機能 -->
  <import file="nablarch/webui/double-submission.xml" />

  <!-- hidden暗号化機能を使用しないリクエストID -->
  <list name="noHiddenEncryptionRequestIds">
    <!-- <value></value> -->
  </list>

  <!-- セッションストア機能 -->
  <import file="nablarch/webui/session-store.xml" />

  <component name="httpErrorHandler" class="nablarch.fw.web.handler.HttpErrorHandler" >
    <property name="defaultPages">
      <map>
        <!-- TODO: 適切なエラー画面作成して設定してください。設定の際は、あわせてweb.xmlも修正してください -->
        <entry key="4.." value="/errorPages/USER_ERROR.jsp" />
        <entry key="403" value="/errorPages/PERMISSION-ERROR.jsp" />
        <entry key="404" value="/errorPages/PAGE_NOT_FOUND_ERROR.jsp" />
        <entry key="413" value="/errorPages/REQUEST_ENTITY_TOO_LARGE.jsp" />
        <entry key="5.." value="/errorPages/ERROR.jsp" />
        <entry key="503" value="/errorPages/SERVICE-UNAVAILABLE-ERROR.jsp" />
      </map>
    </property>
  </component>

  <!-- ダイアレクト設定 -->
  <!-- TODO:使用するDBに合わせてダイアレクトを設定すること -->
  <component name="dialect" class="nablarch.core.db.dialect.H2Dialect" />

  <component name="nablarchWebContextHandler" class="nablarch.fw.dicontainer.nablarch.NablarchWebContextHandler"/>
  <component name="annotationAutoContainerProvider" class="nablarch.fw.dicontainer.nablarch.AnnotationAutoContainerProvider">
    <property name="requestContextSupplier" ref="nablarchWebContextHandler"/>
    <property name="sessionContextSupplier" ref="nablarchWebContextHandler"/>
  </component>

  <component class="nablarch.core.cache.BasicStaticDataCache" name="messageCache">
  <property name="loader">
    <!-- 多言語化したPropertiesStringResourceLoaderの定義 -->
    <component class="nablarch.core.message.PropertiesStringResourceLoader">
      <!-- サポートする言語 -->
      <property name="locales">
        <list>
          <value>ja</value>
          <value>en</value>
        </list>
      </property>

    </component>
  </property>
</component>

<component name="stringResourceHolder" class="nablarch.core.message.StringResourceHolder">
  <!-- 多言語化したPropertiesStringResourceLoaderを持つBasicStaticDataCacheを設定する -->
  <property name="stringResourceCache" ref="messageCache" />
</component>

  <!-- 初期化が必要なコンポーネント -->
  <component name="initializer"
             class="nablarch.core.repository.initialization.BasicApplicationInitializer">
    <property name="initializeList">
      <list>
        <!-- web/code.xml:コードのローダ -->
        <component-ref name="codeLoader" />
        <!-- web/code.xml:コードのキャッシュ -->
        <component-ref name="codeCache" />
        <!-- web/session-store.xml:DBストア-->
        <component-ref name="dbStore" />
        <!-- パッケージマッピング-->
        <component-ref name="packageMapping"/>
        <!-- BasicStaticDataCacheを初期化対象に追加する -->
        <component-ref name="messageCache" />
        <!-- NablarchDI -->
        <component-ref name="annotationAutoContainerProvider"/>

      </list>
    </property>
  </component>

</component-configuration>
